// <auto-generated />
using API.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace API.Migrations
{
    [DbContext(typeof(ProjectPlanContext))]
    partial class ProjectPlanContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Entities.BusinessUnits", b =>
                {
                    b.Property<int>("BusinessUnitID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BusinessUnitDesc");

                    b.Property<string>("BusinessUnitName");

                    b.HasKey("BusinessUnitID");

                    b.ToTable("PP_BusinessUnits");
                });

            modelBuilder.Entity("API.Entities.Comments", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Comment");

                    b.Property<int>("ProjectID");

                    b.HasKey("CommentID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("API.Entities.CustomerCentricScores", b =>
                {
                    b.Property<int>("CustomerCentricScoreID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerCentricScoreName");

                    b.HasKey("CustomerCentricScoreID");

                    b.ToTable("CustomerCentricScores");
                });

            modelBuilder.Entity("API.Entities.CustomerMapCodes", b =>
                {
                    b.Property<int>("CustomerMapCodeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerMapCodeName");

                    b.Property<int?>("ProjectsProjectID");

                    b.HasKey("CustomerMapCodeID");

                    b.HasIndex("ProjectsProjectID");

                    b.ToTable("CustomerMapCodes");
                });

            modelBuilder.Entity("API.Entities.Divisions", b =>
                {
                    b.Property<int>("DivisionID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DivisionName");

                    b.HasKey("DivisionID");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("API.Entities.KeyContacts", b =>
                {
                    b.Property<int>("KeyContactID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KeyContactName");

                    b.Property<int?>("ProjectsProjectID");

                    b.HasKey("KeyContactID");

                    b.HasIndex("ProjectsProjectID");

                    b.ToTable("KeyContacts");
                });

            modelBuilder.Entity("API.Entities.Owners", b =>
                {
                    b.Property<int>("OwnerID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OwnerName");

                    b.HasKey("OwnerID");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("API.Entities.Projects", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BusinessUnitID");

                    b.Property<int>("CustomerCentricScore");

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateEnded");

                    b.Property<DateTime>("DatePrevEnded");

                    b.Property<DateTime>("DateStarted");

                    b.Property<string>("Deliverable");

                    b.Property<string>("Description");

                    b.Property<int>("DivisionID");

                    b.Property<bool>("IsChangedEndDate");

                    b.Property<int>("OwnerID");

                    b.Property<int>("StatusID");

                    b.Property<int>("TaskCategoryID");

                    b.Property<int>("TaskID");

                    b.Property<int>("TaskNumber");

                    b.HasKey("ProjectID");

                    b.ToTable("PP_Projects");
                });

            modelBuilder.Entity("API.Entities.TaskCategories", b =>
                {
                    b.Property<int>("TaskCategoryID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TaskCategoryDesc");

                    b.Property<string>("TaskCategoryName");

                    b.HasKey("TaskCategoryID");

                    b.ToTable("TaskCategories");
                });

            modelBuilder.Entity("API.Entities.Comments", b =>
                {
                    b.HasOne("API.Entities.Projects")
                        .WithMany("Comments")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("API.Entities.CustomerMapCodes", b =>
                {
                    b.HasOne("API.Entities.Projects")
                        .WithMany("CustomerMapCodes")
                        .HasForeignKey("ProjectsProjectID");
                });

            modelBuilder.Entity("API.Entities.KeyContacts", b =>
                {
                    b.HasOne("API.Entities.Projects")
                        .WithMany("KeyContacts")
                        .HasForeignKey("ProjectsProjectID");
                });
#pragma warning restore 612, 618
        }
    }
}
